bindingMaps := Map(
	"User", Map(),
	"Script Specified", Map(
		"Hellenic", Map(
			"ForceSingle", True,
			"Flat", Map(
				"A", "hel_[c,s]_let_a_alpha",
				"B", "hel_[c,s]_let_b_beta",
				"C", "hel_[c,s]_let_p_psi",
				"D", "hel_[c,s]_let_d_delta",
				"E", "hel_[c,s]_let_e_epsilon",
				"F", "hel_[c,s]_let_f_phi",
				"G", "hel_[c,s]_let_g_gamma",
				"H", "hel_[c,s]_let_h_eta",
				"I", "hel_[c,s]_let_i_iota",
				"J", "hel_[c,s]_let_x_xi",
				"K", "hel_[c,s]_let_k_kappa",
				"L", "hel_[c,s]_let_l_lambda",
				"M", "hel_[c,s]_let_m_mu",
				"N", "hel_[c,s]_let_n_nu",
				"O", "hel_[c,s]_let_o_omicron",
				"P", "hel_[c,s]_let_p_pi",
				"Q", "hel_[c,s]_let_q_koppa",
				"R", "hel_[c,s]_let_r_rho",
				"S", "hel_[c,s]_let_s_sigma",
				"T", "hel_[c,s]_let_t_tau",
				"U", "hel_[c,s]_let_t_theta",
				"V", "hel_[c,s]_let_o_omega",
				"W", "hel_[c,s]_let_w_digamma",
				"X", "hel_[c,s]_let_h_chi",
				"Y", "hel_[c,s]_let_y_upsilon",
				"Z", "hel_[c,s]_let_z_zeta",
			),
			"Moded", Map(
				"B", Map(">+", "hel_s_sym_b_beta"),
				"E", Map(">+", "hel_s_sym_e_epsilon_lunate"),
				"F", Map(">+", "hel_s_sym_f_phi"),
				"H", Map("<^>!", "hel_[c,s]_let_h_heta"),
				"I", Map("<^>!", "hel_[c,s]_let_i_jot"),
				"K", Map(">+", "hel_s_sym_k_kappa"),
				"O", Map(),
				"P", Map(">+", "hel_s_sym_p_pi"),
				"Q", Map("<^>!", "hel_[c,s]_let_q_koppa_archaic"),
				"R", Map(">+", "hel_s_sym_r_rho"),
				"S", Map(
					">+", "hel_[c,s]_sym_s_sigma_lunate",
					"<!", "hel_[c,s]_let_s_san",
					"<^>!", "hel_s_let_s_sigma_final",
					"<^>!>+", "hel_[c,s]_let_s_sho",
					"<^>!<!", "hel_[c,s]_let_s_sampi",
					"<^>!<!<+", "hel_[c,s]_let_s_sampi_archaic",
				),
				"T", Map("<^>!", "hel_[c,s]_let_t_theta"),
				"U", Map(">+", "hel_[c,s]_sym_t_theta"),
				"W", Map("<^>!", "hel_[c,s]_let_w_digamma_pamphylian"),
			)
		),
		"Germanic Runes", Map(
			"Flat", Map(
				"A", ["futhark_ansuz"],
				"B", ["futhark_berkanan"],
				"C", ["futhork_cen"],
				"D", ["futhark_dagaz"],
				"E", ["futhark_ehwaz"],
				"F", ["futhark_fehu"],
				"G", ["futhark_gebo"],
				"H", ["futhark_haglaz"],
				"I", ["futhark_isaz"],
				"J", ["futhark_jeran"],
				"K", ["futhark_kauna"],
				"L", ["futhark_laguz"],
				"M", ["futhark_mannaz"],
				"N", ["futhark_naudiz"],
				"O", ["futhark_odal"],
				"P", ["futhark_pertho"],
				"Q", ["futhork_cweorth"],
				"R", ["futhark_raido"],
				"S", ["futhark_sowilo"],
				"T", ["futhark_tiwaz"],
				"U", ["futhark_uruz"],
				"V", ["futhark_younger_later_v"],
				"W", ["futhark_wunjo"],
				"X", [""],
				"Y", ["futhark_younger_ur"],
				"Z", ["futhark_algiz"],
				"Equals", ["equals"],
				"HyphenMinus", ["hyphen_minus"],
				"Dot", ["dot"],
				"Comma", ["comma"],
				"Slash", ["solidus"],
				"Backslash", ["reverse_solidus"],
				"Semicolon", ["semicolon"],
				"Apostrophe", ["apostrophe"],
				"LeftBracket", ["left_bracket"],
				"RightBracket", ["right_bracket"],
				"Tilde", ["grave_accent"],
			),
			"Moded", Map(
				"A", Map(
					"<+", ["futhork_as"],
					">+", ["futhork_aesc"],
					"<^>!", ["futhark_younger_jera"],
					"<^>!<+", ["futhark_younger_jera_short_twig"],
				),
				"B", Map(
					"<^>!<+", ["futhark_younger_bjarkan_short_twig"],
				),
				"C", Map("<^>!<!", ["medieval_c"]),
				"D", Map(
					"<^>!", ["futhark_younger_later_eth"],
					"<^>!<+", ["futhark_younger_later_d"],
					"<^<!", ["cyr_com_vzmet"],
				),
				"E", Map(
					"<+", ["futhork_ear"],
					"<^>!", ["futhark_younger_later_e"],
					"<^>!<!", ["medieval_en"],
				),
				"G", Map(
					"<+", ["futhork_gar"],
					"<^<!", ["cyr_com_palatalization"],
					"<^<!<+", ["cyr_com_pokrytie"],
					"<^<!>+", ["cyr_com_dasia_pneumata"],
					"<^<!<+>+", ["cyr_com_psili_pneumata"],
				),
				"H", Map(
					"<+", ["futhork_haegl"],
					"<^>!", ["futhark_younger_hagall"],
					"<^>!<+", ["futhark_younger_hagall_short_twig"],
				),
				"I", Map(">+", ["futhark_eihwaz"]),
				"J", Map(
					"<+", ["futhork_ger"],
					">+", ["futhork_ior"],
				),
				"K", Map(
					"<+", ["futhork_cealc"],
					">+", ["futhork_calc"],
					"<^>!", ["futhark_younger_kaun"],
				),
				"L", Map("<^>!", ["futhark_younger_later_l"]),
				"M", Map(
					"<^>!", ["futhark_younger_madr"],
					"<^>!<+", ["futhark_younger_madr_short_twig"],
				),
				"N", Map(
					">+", ["futhark_ingwaz"],
					"<+", ["futhork_ing"],
					"<^>!<+", ["futhark_younger_naud_short_twig"],
					"<^>!<!", ["medieval_en"],
				),
				"O", Map(
					"<+", ["futhork_os"],
					"<^>!", ["futhark_younger_oss"],
					"<^>!<+", ["futhark_younger_oss_short_twig"],
					"<^>!<!", ["medieval_on"],
					"<^>!<!>+", ["medieval_o"],
				),
				"P", Map("<^>!", ["futhark_younger_later_p"]),
				"S", Map(
					"<+", ["futhork_sigel"],
					">+", ["futhork_stan"],
					"<^>!<+", ["futhark_younger_sol_short_twig"],
				),
				"T", Map(
					">+", ["futhark_thurisaz"],
					"<^>!<+", ["futhark_younger_tyr_short_twig"],
				),
				"X", Map("<^>!<!", ["medieval_x"]),
				"Y", Map(
					">+", ["futhark_younger_icelandic_yr"],
					"<^>!", ["futhark_younger_yr"],
					"<^>!<+", ["futhark_younger_yr_short_twig"],
					"<+", ["futhork_yr"],
				),
				"Z", Map("<^>!<!", ["medieval_z"]),
				"Equals", Map("+", ["plus"]),
				"HyphenMinus", Map("+", ["underscore"]),
				"Slash", Map("+", ["question"]),
				"Backslash", Map("+", ["vertical_line"]),
				"Semicolon", Map("+", ["colon"]),
				"Apostrophe", Map("+", ["quote"]),
				"Tilde", Map("+", ["tilde"]),
				"LeftBracket", Map("+", ["left_brace"]),
				"RightBracket", Map("+", ["right_brace"]),
				"Comma", Map("<^>!", ["runic_cruciform_punctuation"]),
				"Dot", Map("<^>!", ["runic_single_punctuation"]),
				"Space", Map("<^>!", ["runic_multiple_punctuation"]),
				"7", Map("<^>!", ["futhark_almanac_arlaug"]),
				"8", Map("<^>!", ["futhark_almanac_tvimadur"]),
				"9", Map("<^>!", ["futhark_almanac_belgthor"]),
			)
		),
		"Glagolitic", Map(
			"Flat", Map(
				"А", ["glagolitic_[c,s]_let_az"],
				"Б", ["glagolitic_[c,s]_let_buky"],
				"В", ["glagolitic_[c,s]_let_vede"],
				"Г", ["glagolitic_[c,s]_let_glagoli"],
				"Д", ["glagolitic_[c,s]_let_dobro"],
				"Е", ["glagolitic_[c,s]_let_yestu"],
				"Ё", ["glagolitic_[c,s]_let_yo"],
				"Ж", ["glagolitic_[c,s]_let_zhivete"],
				"З", ["glagolitic_[c,s]_let_zemlja"],
				"И", ["glagolitic_[c,s]_let_i"],
				"Й", ["glagolitic_[c,s]_let_izhe"],
				"К", ["glagolitic_[c,s]_let_kako"],
				"Л", ["glagolitic_[c,s]_let_ljudije"],
				"М", ["glagolitic_[c,s]_let_myslite"],
				"Н", ["glagolitic_[c,s]_let_nashi"],
				"О", ["glagolitic_[c,s]_let_onu"],
				"П", ["glagolitic_[c,s]_let_pokoji"],
				"Р", ["glagolitic_[c,s]_let_ritsi"],
				"С", ["glagolitic_[c,s]_let_slovo"],
				"Т", ["glagolitic_[c,s]_let_tvrido"],
				"У", ["glagolitic_[c,s]_let_uku"],
				"Ф", ["glagolitic_[c,s]_let_fritu"],
				"Х", ["glagolitic_[c,s]_let_heru"],
				"Ц", ["glagolitic_[c,s]_let_tsi"],
				"Ч", ["glagolitic_[c,s]_let_chrivi"],
				"Ш", ["glagolitic_[c,s]_let_sha"],
				"Щ", ["glagolitic_[c,s]_let_shta"],
				"Ъ", ["glagolitic_[c,s]_let_yeru"],
				"Ы", ["glagolitic_[c,s]_let_yery"],
				"Ь", ["glagolitic_[c,s]_let_yeri"],
				"Э", ["glagolitic_[c,s]_let_small_yus"],
				"Ю", ["glagolitic_[c,s]_let_yu"],
				"Я", ["glagolitic_[c,s]_let_yati"],
				"Равно", ["equals"],
				"ДефисоМинус", ["hyphen_minus"],
				"Точка", ["dot"],
				"ОбратныйСлэш", ["reverse_solidus"],
			),
			"Moded", Map(
				"А", Map("<^>!", ["glagolitic_[c,s]_let_trokutasti_a"]),
				"Ё", Map("<!", ["glagolitic_[c,s]_let_big_yus_iotified"]),
				"Ж", Map("<^>!", ["glagolitic_[c,s]_let_djervi"]),
				"И", Map(
					"<^>!", ["glagolitic_[c,s]_let_initial_izhe"],
					"<+", ["glagolitic_[c,s]_let_izhe"],
					"<^>!<+", ["glagolitic_[c,s]_let_izhitsa"],
				),
				"О", Map(
					"<^>!", ["glagolitic_[c,s]_let_otu"],
					"<!", ["glagolitic_[c,s]_let_big_yus"],
				),
				"П", Map("<^>!", ["glagolitic_[c,s]_let_pe"]),
				"С", Map("<^>!", ["glagolitic_[c,s]_let_dzelo"]),
				"Х", Map("<^>!", ["glagolitic_[c,s]_let_spider_ha"]),
				"Ф", Map("<^>!", ["glagolitic_[c,s]_let_fita"]),
				"Ъ", Map("<^>!", ["glagolitic_[c,s]_let_shtapic"]),
				"Э", Map("<^>!", ["glagolitic_[c,s]_let_small_yus_iotified"]),
				"Равно", Map("+", ["plus"]),
				"ДефисоМинус", Map("+", ["underscore"]),
				"Точка", Map("+", ["comma"]),
				"ОбратныйСлэш", Map("+", ["solidus"]),
			)
		),
		"Old Turkic", Map(
			"Flat", Map(
				"A", "old_turkic_n_rune_a_[yenisei,orkhon]_a",
				"B", "old_turkic_n_rune_b_[yenisei,orkhon]_ab",
				"C", "old_turkic_n_rune_c_[yenisei,orkhon]_ec",
				"D", "old_turkic_n_rune_d_[yenisei,orkhon]_ad",
				"E", "old_turkic_n_rune_e_yenisei",
				"F", [""],
				"G", "old_turkic_n_rune_g_[yenisei,orkhon]_ag",
				"H", [""],
				"I", "old_turkic_n_rune_i_[yenisei,orkhon]",
				"J", "old_turkic_n_rune_y_[yenisei,orkhon]_aey",
				"K", "old_turkic_n_rune_k_[yenisei,orkhon]_aq",
				"L", "old_turkic_n_rune_l_[yenisei,orkhon]_al",
				"M", "old_turkic_n_rune_m_orkhon_em",
				"N", "old_turkic_n_rune_n_orkhon_an",
				"O", "old_turkic_n_rune_o_orkhon",
				"P", "old_turkic_n_rune_p_orkhon_ep",
				"Q", "old_turkic_n_rune_q_[yenisei,orkhon]_oq",
				"R", "old_turkic_n_rune_r_[yenisei,orkhon]_ar",
				"S", "old_turkic_n_rune_s_orkhon_as",
				"T", "old_turkic_n_rune_t_[yenisei,orkhon]_at",
				"U", [""],
				"V", [""],
				"W", [""],
				"X", [""],
				"Y", "old_turkic_n_rune_y_[yenisei,orkhon]_ay",
				"Z", "old_turkic_n_rune_z_[yenisei,orkhon]_ez",
				"Equals", ["equals"],
				"HyphenMinus", ["hyphen_minus"],
				"Dot", ["dot"],
				"Comma", ["comma"],
				"Slash", ["solidus"],
				"Backslash", ["reverse_solidus"],
				"Semicolon", ["semicolon"],
				"Apostrophe", ["apostrophe"],
				"LeftBracket", ["left_bracket"],
				"RightBracket", ["right_bracket"],
				"Tilde", ["grave_accent"],
			),
			"Moded", Map(
				"A", Map(
					"<^>!", "old_turkic_n_rune_a_yenisei_ae",
					"<!", "old_turkic_n_rune_a_[yenisei,orkhon]_ash"
				),
				"B", Map("<^>!", "old_turkic_n_rune_b_[yenisei,orkhon]_aeb"),
				"C", Map("<^>!", "old_turkic_n_rune_c_orkhon_ic"),
				"D", Map("<^>!", "old_turkic_n_rune_d_orkhon_aed"),
				"G", Map("<^>!", "old_turkic_n_rune_g_[yenisei,orkhon]_aeg"),
				"K", Map("<^>!", "old_turkic_n_rune_k_[yenisei,orkhon]_aek"),
				"L", Map("<^>!", "old_turkic_n_rune_l_orkhon_ael"),
				"N", Map(
					"<^>!>+", "old_turkic_n_rune_n_[yenisei,orkhon]_ent",
					"<^>!", "old_turkic_n_rune_n_[yenisei,orkhon]_aen",
					">+", "old_turkic_n_rune_n_[yenisei,orkhon]_[enc,eny]",
					"<!", "old_turkic_n_rune_n_orkhon_eng"
				),
				"O", Map("<^>!", "old_turkic_n_rune_o_[yenisei,orkhon]_oe"),
				"P", Map("<!", "old_turkic_n_rune_p_orkhon_op"),
				"Q", Map(
					"<^>!", "old_turkic_n_rune_q_[yenisei,orkhon]_oek",
					"<!", "old_turkic_n_rune_q_[yenisei,orkhon]_iq"
				),
				"R", Map(
					"<^>!", "old_turkic_n_rune_r_orkhon_aer",
					"<!", "old_turkic_n_rune_r_orkhon_bash"
				),
				"S", Map(
					"<^>!", "old_turkic_n_rune_s_orkhon_aes",
					"<!", "old_turkic_n_rune_s_[yenisei,orkhon]_esh"
				),
				"T", Map(
					"<^>!", "old_turkic_n_rune_t_[yenisei,orkhon]_aet",
					"<^>!>+", "old_turkic_n_rune_t_orkhon_elt",
					"<!", "old_turkic_n_rune_t_orkhon_ot"
				),
				"Y", Map("<^>!", "old_turkic_n_rune_y_[yenisei,orkhon]_aey"),
				"Equals", Map("+", ["plus"]),
				"HyphenMinus", Map("+", ["underscore"]),
				"Slash", Map("+", ["question"]),
				"Backslash", Map("+", ["vertical_line"]),
				"Semicolon", Map("+", ["colon"]),
				"Apostrophe", Map("+", ["quote"]),
				"Tilde", Map("+", ["tilde"]),
				"LeftBracket", Map("+", ["left_brace"]),
				"RightBracket", Map("+", ["right_brace"]),
				"Comma", Map("<^>!", ["runic_cruciform_punctuation"]),
				"Dot", Map("<^>!", ["runic_single_punctuation"]),
				"Space", Map("<^>!", ["runic_multiple_punctuation"]),
			)
		),
		"Old Permic", Map(
			"Flat", Map(
				"А", ["old_permic_n_let_an"],
				"Б", ["old_permic_n_let_bur"],
				"В", ["old_permic_n_let_ver"],
				"Г", ["old_permic_n_let_gai"],
				"Д", ["old_permic_n_let_doi"],
				"Е", ["old_permic_n_let_e"],
				"Ё", ["old_permic_n_let_oo"],
				"Ж", ["old_permic_n_let_zhoi"],
				"З", ["old_permic_n_let_zata"],
				"И", ["old_permic_n_let_i"],
				"Й", ["old_permic_n_let_ie"],
				"К", ["old_permic_n_let_koke"],
				"Л", ["old_permic_n_let_lei"],
				"М", ["old_permic_n_let_menoe"],
				"Н", ["old_permic_n_let_nenoe"],
				"О", ["old_permic_n_let_vooi"],
				"П", ["old_permic_n_let_peei"],
				"Р", ["old_permic_n_let_rei"],
				"С", ["old_permic_n_let_sii"],
				"Т", ["old_permic_n_let_tai"],
				"У", ["old_permic_n_let_u"],
				"Ф", ["old_permic_n_let_ef"],
				"Х", ["old_permic_n_let_ha"],
				"Ц", ["old_permic_n_let_tsiu"],
				"Ч", ["old_permic_n_let_chery"],
				"Ш", ["old_permic_n_let_shooi"],
				"Щ", ["old_permic_n_let_shchooi"],
				"Ъ", ["old_permic_n_let_yeru"],
				"Ы", ["old_permic_n_let_yery"],
				"Ь", ["old_permic_n_let_yeri"],
				"Э", ["old_permic_n_let_yat"],
				"Ю", ["old_permic_n_let_yu"],
				"Я", ["old_permic_n_let_ia"],
			),
			"Moded", Map(
				"З", Map("<^>!", ["old_permic_n_let_dzita"]),
				"Ы", Map("<^>!", ["old_permic_n_let_yry"]),
				"О", Map("<^>!", ["old_permic_n_let_o"]),
				"Ж", Map("<^>!", ["old_permic_n_let_dzhoi"]),
				"Я", Map("<^>!", ["old_permic_n_let_ya"]),
			)
		),
		"Old Hungarian", Map(
			"ForceSingle", True,
			"Flat", Map(
				"A", "old_hungarian_[c,s]_rune_a",
				"B", "old_hungarian_[c,s]_rune_b_eb",
				"C", "old_hungarian_[c,s]_rune_c_ec",
				"D", "old_hungarian_[c,s]_rune_d_ed",
				"E", "old_hungarian_[c,s]_rune_e",
				"F", "old_hungarian_[c,s]_rune_f_ef",
				"G", "old_hungarian_[c,s]_rune_g_eg",
				"H", "old_hungarian_[c,s]_rune_h_eh",
				"I", "old_hungarian_[c,s]_rune_i",
				"J", "old_hungarian_[c,s]_rune_y_ej",
				"K", "old_hungarian_[c,s]_rune_k_ek",
				"L", "old_hungarian_[c,s]_rune_l_el",
				"M", "old_hungarian_[c,s]_rune_m_em",
				"N", "old_hungarian_[c,s]_rune_n_en",
				"O", "old_hungarian_[c,s]_rune_o",
				"P", "old_hungarian_[c,s]_rune_p_ep",
				"Q", "",
				"R", "old_hungarian_[c,s]_rune_r_er",
				"S", "old_hungarian_[c,s]_rune_s_es",
				"T", "old_hungarian_[c,s]_rune_t_et",
				"U", "old_hungarian_[c,s]_rune_u",
				"V", "old_hungarian_[c,s]_rune_v_ev",
				"W", "",
				"X", "",
				"Y", "old_hungarian_[c,s]_rune_y_ue",
				"Z", "old_hungarian_[c,s]_rune_z_ez",
				"1", "old_hungarian_n_num_one",
				"2", "old_hungarian_n_num_five",
				"3", "old_hungarian_n_num_ten",
				"4", "old_hungarian_n_num_fifty",
				"5", "old_hungarian_n_num_one_hundred",
				"6", "old_hungarian_n_num_one_thousand",
			),
			"Moded", Map(
				"A", Map("<^>!", "old_hungarian_[c,s]_rune_a_aa"),
				"B", Map("<+", "old_hungarian_[c,s]_rune_b_amb"),
				"C", Map(
					"<^>!", "old_hungarian_[c,s]_rune_c_ecs",
					"<+", "old_hungarian_[c,s]_rune_c_ech"
				),
				"E", Map(
					"<^>!", "old_hungarian_[c,s]_rune_e_ee",
					"<+", "old_hungarian_[c,s]_rune_e_enk"
				),
				"G", Map("<^>!", "old_hungarian_[c,s]_rune_g_egy"),
				"I", Map("<^>!", "old_hungarian_[c,s]_rune_i_ii"),
				"K", Map(
					"<^>!", "old_hungarian_[c,s]_rune_k_ak",
					"<+", "old_hungarian_[c,s]_rune_k_unk"
				),
				"L", Map("<^>!", "old_hungarian_[c,s]_rune_l_ely"),
				"N", Map("<^>!", "old_hungarian_[c,s]_rune_n_eny"),
				"O", Map(
					"<^>!", "old_hungarian_[c,s]_rune_o_oo",
					"<+", "old_hungarian_[c,s]_rune_o_oe",
					"<^>!<+", "old_hungarian_[c,s]_rune_o_oe_nik",
					">+", "old_hungarian_[c,s]_rune_o_oee"
				),
				"P", Map("<+", "old_hungarian_[c,s]_rune_p_emp"),
				"R", Map("<+", "old_hungarian_[c,s]_rune_r_er_short"),
				"S", Map(
					"<^>!", "old_hungarian_[c,s]_rune_s_esz",
					"<+", "old_hungarian_[c,s]_rune_s_us"
				),
				"T", Map(
					"<^>!", "old_hungarian_[c,s]_rune_t_ety",
					"<+", "old_hungarian_[c,s]_rune_t_ent",
					">+", "old_hungarian_[c,s]_rune_t_ent_shaped"
				),
				"U", Map("<^>!", "old_hungarian_[c,s]_rune_u_uu"),
				"Y", Map("<^>!", "old_hungarian_[c,s]_rune_y_ue_nik"),
				"Z", Map("<^>!", "old_hungarian_[c,s]_rune_z_ezs"),
			),
		),
		"Old Italic", Map(
			"ForceSingle", True,
			"Flat", Map(
				"A", "old_italic_n_let_a",
				"B", "old_italic_n_let_b_be",
				"C", "old_italic_n_let_c_ke",
				"D", "old_italic_n_let_d_de",
				"E", "old_italic_n_let_e",
				"F", "old_italic_n_let_f_ef",
				"G", "",
				"H", "old_italic_n_let_h_he",
				"I", "old_italic_n_let_i",
				"J", "",
				"K", "old_italic_n_let_k_ka",
				"L", "old_italic_n_let_l_el",
				"M", "old_italic_n_let_m_em",
				"N", "old_italic_n_let_n_en",
				"O", "old_italic_n_let_o",
				"P", "old_italic_n_let_p_pe",
				"Q", "old_italic_n_let_q_ku",
				"R", "old_italic_n_let_r_er",
				"S", "old_italic_n_let_s_es",
				"T", "old_italic_n_let_t_te",
				"U", "old_italic_n_let_u",
				"V", "old_italic_n_let_f_ve",
				"W", "old_italic_n_let_c_northern_tse",
				"X", "old_italic_n_let_x_eks",
				"Y", "old_italic_n_let_y_ye",
				"Z", "old_italic_n_let_z_ze",
			),
			"Moded", Map(
				"C", Map("<!", "old_italic_n_let_c_che"),
				"I", Map(">+", "old_italic_n_let_i_ii"),
				"K", Map(">+", "old_italic_n_let_k_khe"),
				"P", Map(">+", "old_italic_n_let_p_phe"),
				"R", Map(">+", "old_italic_n_let_r_ers"),
				"S", Map(
					">+", "old_italic_n_let_s_esh",
					"<+", "old_italic_n_let_s_she",
					"<!", "old_italic_n_let_s_ess"
				),
				"T", Map(">+", "old_italic_n_let_t_the"),
				"U", Map(">+", "old_italic_n_let_u_uu"),
				"W", Map("<+", "old_italic_n_let_c_southern_tse"),
				"1", Map("<^>!", "old_italic_n_num_one"),
				"2", Map("<^>!", "old_italic_n_num_five"),
				"3", Map("<^>!", "old_italic_n_num_ten"),
				"4", Map("<^>!", "old_italic_n_num_fifty"),
			)
		),
		"Gothic", Map(
			"ForceSingle", True,
			"Flat", Map(
				"A", "gothic_n_let_a_ahza",
				"B", "gothic_n_let_b_bairkan",
				"C", "gothic_n_let_t_thiuth",
				"D", "gothic_n_let_d_dagz",
				"E", "gothic_n_let_e_aihvus",
				"F", "gothic_n_let_f_faihu",
				"G", "gothic_n_let_g_giba",
				"H", "gothic_n_let_h_hagl",
				"I", "gothic_n_let_i_eis",
				"J", "",
				"K", "gothic_n_let_k_kusma",
				"L", "gothic_n_let_l_lagus",
				"M", "gothic_n_let_m_manna",
				"N", "gothic_n_let_n_nauths",
				"O", "gothic_n_let_o_othal",
				"P", "gothic_n_let_p_pairthra",
				"Q", "gothic_n_let_q_qairthra",
				"R", "gothic_n_let_r_raida",
				"S", "gothic_n_let_s_sugil",
				"T", "gothic_n_let_t_teiws",
				"U", "gothic_n_let_u_urus",
				"V", "gothic_n_let_h_hwair",
				"W", "gothic_n_let_w_winja",
				"X", "gothic_n_let_k_iggws",
				"Y", "gothic_n_let_y_jer",
				"Z", "gothic_n_let_z_ezek",
			),
			"Moded", Map(
				"H", Map("<^>!", "gothic_n_let_h_hwair"),
				"P", Map("<^>!", "gothic_n_num_ninety"),
				"S", Map("<^>!", "gothic_n_num_nine_hundred"),
				"T", Map("<^>!", "gothic_n_let_t_thiuth"),
				"Comma", Map("<^>!", "runic_cruciform_punctuation"),
				"Dot", Map("<^>!", "runic_single_punctuation"),
				"Space", Map("<^>!", "runic_multiple_punctuation"),
			),
		),
		"Phoenician", Map(
			"ForceSingle", True,
			"Flat", Map(
				"A", "phoenician_n_let_a_alef",
				"B", "phoenician_n_let_b_bet",
				"C", "phoenician_n_let_c_sade",
				"D", "phoenician_n_let_d_delt",
				"E", "",
				"F", "",
				"G", "phoenician_n_let_g_gaml",
				"H", "phoenician_n_let_h_he",
				"I", "",
				"J", "phoenician_n_let_y_yod",
				"K", "phoenician_n_let_k_kaf",
				"L", "phoenician_n_let_l_lamd",
				"M", "phoenician_n_let_m_mem",
				"N", "phoenician_n_let_n_nun",
				"O", "phoenician_n_let_a_ain",
				"P", "phoenician_n_let_p_pe",
				"Q", "phoenician_n_let_q_qof",
				"R", "phoenician_n_let_r_rosh",
				"S", "phoenician_n_let_s_semk",
				"T", "phoenician_n_let_t_tau",
				"U", "",
				"V", "",
				"W", "phoenician_n_let_w_wau",
				"X", "",
				"Y", "phoenician_n_let_y_yod",
				"Z", "phoenician_n_let_z_zai",
			),
			"Moded", Map(
				"A", Map("<+", "phoenician_n_let_a_ain"),
				"H", Map(">+", "phoenician_n_let_h_het"),
				"S", Map(">+", "phoenician_n_let_s_shin"),
				"T", Map(">+", "phoenician_n_let_t_tet"),
				"1", Map("<^>!", "phoenician_n_num_one"),
				"2", Map("<^>!", "phoenician_n_num_two"),
				"3", Map("<^>!", "phoenician_n_num_three"),
				"4", Map("<^>!", "phoenician_n_num_ten"),
				"5", Map("<^>!", "phoenician_n_num_twenty"),
				"6", Map("<^>!", "phoenician_n_num_hundred"),
				"Space", Map("<^>!", "phoenician_n_sym_word_separator"),
			)
		),
		"Ancient South Arabian", Map(
			"ForceSingle", True,
			"Flat", Map(
				"A", "south_arabian_n_let_a_alef",
				"B", "south_arabian_n_let_b_beth",
				"C", "",
				"D", "south_arabian_n_let_d_daleth",
				"E", "",
				"F", "south_arabian_n_let_f_fe",
				"G", "south_arabian_n_let_g_gimel",
				"H", "south_arabian_n_let_h_he",
				"I", "",
				"J", "",
				"K", "south_arabian_n_let_k_kaph",
				"L", "south_arabian_n_let_l_lamedh",
				"M", "south_arabian_n_let_m_mem",
				"N", "south_arabian_n_let_n_nun",
				"O", "",
				"P", "",
				"Q", "south_arabian_n_let_q_qoph",
				"R", "south_arabian_n_let_r_resh",
				"S", "south_arabian_n_let_s_sat",
				"T", "south_arabian_n_let_t_taw",
				"U", "",
				"V", "",
				"W", "south_arabian_n_let_w_waw",
				"X", "south_arabian_n_let_h_kheth",
				"Y", "south_arabian_n_let_y_yodh",
				"Z", "south_arabian_n_let_z_zayn",
			),
			"Moded", Map(
				"A", Map("<^>!", "south_arabian_n_let_a_ayn"),
				"D", Map(
					"<^>!", "south_arabian_n_let_d_dhadhe",
					"<^>!>+", "south_arabian_n_let_d_dhaleth"
				),
				"G", Map(
					"<^>!", "south_arabian_n_let_g_ghayn",
				),
				"H", Map(
					"<^>!", "south_arabian_n_let_h_kheth",
					">+", "south_arabian_n_let_h_heth"
				),
				"S", Map(
					"<^>!", "south_arabian_n_let_s_sadhe",
					"<!", "south_arabian_n_let_s_shin",
					"<+", "south_arabian_n_let_s_samekh"
				),
				"T", Map(
					"<^>!", "south_arabian_n_let_t_teth",
					"<^>!>+", "south_arabian_n_let_t_thaw",
					"<+", "south_arabian_n_let_t_theth"
				),
				"1", Map("<^>!", "south_arabian_n_num_one"),
				"5", Map("<^>!", "south_arabian_n_num_fifty"),
				"0", Map("<^>!", "south_arabian_n_sym_numeral_bracket"),
			)
		),
		"Ancient North Arabian", Map(
			"ForceSingle", True,
			"Flat", Map(
				"A", "north_arabian_n_let_a_alef",
				"B", "north_arabian_n_let_b_beh",
				"C", "",
				"D", "north_arabian_n_let_d_dal",
				"E", "",
				"F", "north_arabian_n_let_f_feh",
				"G", "north_arabian_n_let_g_geem",
				"H", "north_arabian_n_let_h_heh",
				"I", "",
				"J", "",
				"K", "north_arabian_n_let_k_kaf",
				"L", "north_arabian_n_let_l_lam",
				"M", "north_arabian_n_let_m_meem",
				"N", "north_arabian_n_let_n_noon",
				"O", "",
				"P", "",
				"Q", "north_arabian_n_let_q_qaf",
				"R", "north_arabian_n_let_r_reh",
				"S", "north_arabian_n_let_s_es",
				"T", "north_arabian_n_let_t_teh",
				"U", "",
				"V", "",
				"W", "north_arabian_n_let_w_waw",
				"X", "",
				"Y", "north_arabian_n_let_y_yeh",
				"Z", "north_arabian_n_let_z_zain",
			),
			"Moded", Map(
				"A", Map("<^>!", "north_arabian_n_let_a_ain"),
				"D", Map(
					"<^>!", "north_arabian_n_let_d_thal",
					"<^>!>+", "north_arabian_n_let_d_dad",
				),
				"G", Map(
					"<^>!", "north_arabian_n_let_g_ghain",
				),
				"H", Map(
					"<^>!", "north_arabian_n_let_h_hah",
					">+", "north_arabian_n_let_h_khah"
				),
				"S", Map(
					"<^>!", "north_arabian_n_let_s_sad",
					"<!", "north_arabian_n_let_s_esh",
					"<+", "north_arabian_n_let_s_sh"
				),
				"T", Map(
					"<+", "north_arabian_n_let_t_zah",
					"<^>!", "north_arabian_n_let_t_tah",
					">!>+", "north_arabian_n_let_t_theh"
				),
				"Z", Map(),
				"1", Map("<^>!", "north_arabian_n_num_one"),
				"2", Map("<^>!", "north_arabian_n_num_ten"),
				"3", Map("<^>!", "north_arabian_n_num_twenty"),
			)
		),
		"Carian", Map(
			"ForceSingle", True,
			"Flat", Map(),
			"Moded", Map()
		),
		"Lycian", Map(
			"ForceSingle", True,
			"Flat", Map(),
			"Moded", Map()
		),
		"Lydian", Map(
			"ForceSingle", True,
			"Flat", Map(),
			"Moded", Map()
		),
		"Sidetic", Map(
			"ForceSingle", True,
			"Flat", Map(
				"A", "sidetic_n_let_a_N01",
				"B", "sidetic_n_let_b_N24",
				"C", "sidetic_n_let_c_N09",
				"D", "sidetic_n_let_d_N12",
				"E", "sidetic_n_let_e_N02",
				"F", "",
				"G", "sidetic_n_let_g_N19",
				"H", "sidetic_n_let_h_N20",
				"I", "sidetic_n_let_i_N03",
				"J", "",
				"K", "sidetic_n_let_k_N23",
				"L", "sidetic_n_let_l_N17",
				"M", "sidetic_n_let_m_N10",
				"N", "sidetic_n_let_n_N16",
				"O", "sidetic_n_let_o_N04",
				"P", "sidetic_n_let_p_N08",
				"Q", "",
				"R", "sidetic_n_let_r_N21",
				"S", "sidetic_n_let_S_N14",
				"T", "sidetic_n_let_t_N11",
				"U", "sidetic_n_let_u_N05",
				"V", "",
				"W", "sidetic_n_let_w_N06",
				"X", "",
				"Y", "sidetic_n_let_y_N07",
				"Z", "sidetic_n_let_z_N26",
			),
			"Moded", Map(
				"A", Map("<!", "sidetic_n_let_a_N22"),
				"N", Map("<^>!", "sidetic_n_let_n_N25"),
				"S", Map("<!", "sidetic_n_let_S_N15"),
				"T", Map(
					"<^>!", "sidetic_n_let_t_N13",
					"<^>!>+", "sidetic_n_let_t_N18",
				),
			)
		),
		"Cypriot Syllabary", Map(
			"ForceSingle", True,
			"Flat", Map(),
			"Moded", Map()
		),
		"Tifinagh", Map(
			"ForceSingle", True,
			"Flat", Map(),
			"Moded", Map()
		),
		"Ugaritic", Map(
			"ForceSingle", True,
			"Flat", Map(
				"A", "ugaritic_n_let_a_alpa",
				"B", "ugaritic_n_let_b_beta",
				"C", "",
				"D", "ugaritic_n_let_d_delta",
				"E", "",
				"F", "",
				"G", "ugaritic_n_let_g_gamla",
				"H", "ugaritic_n_let_h_ho",
				"I", "ugaritic_n_let_i",
				"J", "",
				"K", "ugaritic_n_let_k_kaf",
				"L", "ugaritic_n_let_l_lamda",
				"M", "ugaritic_n_let_m_mem",
				"N", "ugaritic_n_let_n_nun",
				"O", "",
				"P", "ugaritic_n_let_p_pu",
				"Q", "ugaritic_n_let_q_qopa",
				"R", "ugaritic_n_let_r_rasha",
				"S", "ugaritic_n_let_s_shin",
				"T", "ugaritic_n_let_t_to",
				"U", "ugaritic_n_let_u",
				"V", "",
				"W", "ugaritic_n_let_w_wo",
				"X", "",
				"Y", "ugaritic_n_let_y_yod",
				"Z", "ugaritic_n_let_z_zeta",
				"Space", "ugaritic_n_sym_word_divider",
			),
			"Moded", Map(
				"A", Map("<^>!", "ugaritic_n_let_a_ain"),
				"B", Map(),
				"C", Map(),
				"D", Map("<^>!", "ugaritic_n_let_d_dhal"),
				"E", Map(),
				"F", Map(),
				"G", Map("<^>!", "ugaritic_n_let_g_ghain"),
				"H", Map(
					"<^>!", "ugaritic_n_let_h_kha",
					"<^>!>+", "ugaritic_n_let_h_hota",
				),
				"I", Map(),
				"J", Map(),
				"K", Map(),
				"L", Map(),
				"M", Map(),
				"N", Map(),
				"O", Map(),
				"P", Map(),
				"Q", Map(),
				"R", Map(),
				"S", Map(
					"<^>!", "ugaritic_n_let_s_sade",
					"<+", "ugaritic_n_let_s_samka",
					"<!", "ugaritic_n_let_s_ssu",
				),
				"T", Map(
					"<^>!", "ugaritic_n_let_t_tet",
					"<^>!>+", "ugaritic_n_let_t_thanna",
				),
				"U", Map(),
				"V", Map(),
				"W", Map(),
				"X", Map(),
				"Y", Map(),
				"Z", Map("<!", "ugaritic_n_let_z_zu"),
			)
		),
		"Old Persian", Map(
			"ForceSingle", True,
			"Flat", Map(),
			"Moded", Map()
		),
		"IPA", Map(
			"ForceSingle", True,
			"Flat", Map(
				"0", "digit_0",
				"1", "digit_1",
				"2", "digit_2",
				"3", "digit_3",
				"4", "digit_4",
				"5", "digit_5",
				"6", "digit_6",
				"7", "digit_7",
				"8", "digit_8",
				"9", "digit_9",
				"A", "lat_[c,s]_let_a",
				"B", "lat_[c,s]_let_b",
				"C", "lat_[c,s]_let_c",
				"D", "lat_[c,s]_let_d",
				"E", "lat_[c,s]_let_e",
				"F", "lat_[c,s]_let_f",
				"G", "lat_[c,s]_let_g",
				"H", "lat_[c,s]_let_h",
				"I", "lat_[c,s]_let_i",
				"J", "lat_[c,s]_let_j",
				"K", "lat_[c,s]_let_k",
				"L", "lat_[c,s]_let_l",
				"M", "lat_[c,s]_let_m",
				"N", "lat_[c,s]_let_n",
				"O", "lat_[c,s]_let_o",
				"P", "lat_[c,s]_let_p",
				"Q", "lat_[c,s]_let_q",
				"R", "lat_[c,s]_let_r",
				"S", "lat_[c,s]_let_s",
				"T", "lat_[c,s]_let_t",
				"U", "lat_[c,s]_let_u",
				"V", "lat_[c,s]_let_v",
				"W", "lat_[c,s]_let_w",
				"X", "lat_[c,s]_let_x",
				"Y", "lat_[c,s]_let_y",
				"Z", "lat_[c,s]_let_z",
				"Equals", "equals",
				"HyphenMinus", "hyphen_minus",
				"Dot", "dot",
				"Comma", "comma",
				"Slash", "solidus",
				"Backslash", "reverse_solidus",
				"Semicolon", "colon_triangle",
				"Apostrophe", "line_vertical::modifier",
				"LeftBracket", "left_bracket",
				"RightBracket", "right_bracket",
				"Tilde", "grave_accent",
			),
			"Moded", Map(
				"1", Map("+", "exclamation"),
				"2", Map("+", "commercial_at"),
				"3", Map("+", "number_sign"),
				"4", Map("+", "wallet_dollar"),
				"5", Map("+", "percent"),
				"6", Map("+", "circumflex_accent"),
				"7", Map("+", "lat_s_lig_et"),
				"8", Map("+", "asterisk"),
				"9", Map("+", "left_parenthesis"),
				"0", Map("+", "right_parenthesis"),
				"Equals", Map("+", "plus"),
				"Slash", Map("+", "question"),
				"Backslash", Map("+", "vertical_line"),
				"Tilde", Map("+", "tilde"),
				"LeftBracket", Map("+", "left_brace"),
				"RightBracket", Map("+", "right_brace"),
				"A", Map(
					"<^>!", "lat_s_let_a_alpha[_turned,]",
					"<^>!>+", "lat_s_let_a_alpha[_turned,]::modifier",
					"<^>!<+", "lat_s_let_a__diaeresis",
					"<^>!<!", "lat_s_let_a_turned",
					"<^>!<!>+", "lat_s_let_a_turned::modifier",
					"<^>!<!<+", "lat_s_lig_ae",
					"<^>!<!<+>+", "lat_s_lig_ae::modifier",
					">+", "lat_s_let_a::modifier",
				),
				"B", Map(
					">+", "lat_s_let_b::modifier",
				),
				"C", Map(
					"<^>!", "lat_s_let_c__curl",
					"<^>!>+", "lat_s_let_c__curl::modifier",
					">+", "lat_s_let_c::modifier",
				),
				"D", Map(
					"<^>!", "lat_s_let_d_eth",
					"<^>!>+", "lat_s_let_d_eth::modifier",
					">+", "lat_s_let_d::modifier",
				),
				"E", Map(
					"<^>!", "lat_s_let_e_epsilon[_reversed,]",
					"<^>!>+", "lat_s_let_e_epsilon[_reversed,]::modifier",
					"<^>!<+", "lat_s_let_e_epsilon_closed_reversed",
					"<^>!<+>+", "lat_s_let_e_epsilon_closed_reversed::modifier",
					"<^>!<!", "lat_s_let_[e_reversed,a_schwa]",
					"<^>!<!>+", "lat_s_let_[e_reversed,a_schwa]::modifier",
					">+", "lat_s_let_e::modifier",
				),
				"F", Map(
					"<^>!", "lat_s_let_f_phi",
					">+", "lat_s_let_f::modifier",
				),
				"G", Map(
					"<^>!", "lat_[c_let_g::smallCapital,s_let_g_gamma]",
					">+", "lat_s_let_g::modifier",
				),
				"H", Map(
					"<^>!", "lat_c_let_h::smallCapital",
					">+", "lat_s_let_h::modifier",
				),
				"I", Map(
					"<^>!", "lat_[c_let_i::smallCapital,s_let_i__stroke_short]",
					">+", "lat_s_let_i::modifier",
				),
				"J", Map(
					">+", "lat_s_let_j::modifier",
				),
				"K", Map(
					">+", "lat_s_let_k::modifier",
				),
				"L", Map(
					"<^>!", "lat_c_let_l::smallCapital",
					">+", "lat_s_let_l::modifier",
				),
				"M", Map(
					">+", "lat_s_let_m::modifier",
				),
				"N", Map(
					"<^>!", "lat_[c_let_n::smallCapital,s_let_n_eng]",
					"<^>!>+", "lat_s_let_n_eng::modifier",
					"<^>!<!", "lat_s_dig_feng",
					"<^>!<!>+", "lat_s_dig_feng::modifier",
					">+", "lat_s_let_n::modifier",
				),
				"O", Map(
					"<^>!", "lat_s_let_o_rams_horn",
					"<^>!>+", "lat_s_let_o_rams_horn::modifier",
					"<^>!<+", "lat_s_let_o_open",
					"<^>!<+>+", "lat_s_let_o_open::modifier",
					"<^>!<!", "lat_s_let_o__[tilde_overlay,solidus_long]",
					"<^>!<!>+", "lat_s_let_o__[tilde_overlay,solidus_long]::modifier",
					"<^>!<!<+", "lat_[c_lig_oe::smallCapital,s_lig_oe]",
					"<^>!<!<+>+", "lat_s_lig_oe::modifier",
					">+", "lat_s_let_o::modifier",
				),
				"P", Map(
					">+", "lat_s_let_p::modifier",
				),
				"Q", Map(
					">+", "lat_s_let_q::modifier",
				),
				"R", Map(
					"<^>!", "lat_c_let_r::smallCapital",
					">+", "lat_s_let_r::modifier",
				),
				"S", Map(
					"<^>!", "lat_s_let_s_sigma",
					">+", "lat_s_let_s::modifier",
				),
				"T", Map(
					">+", "lat_s_let_t::modifier",
				),
				"U", Map(
					"<^>!", "lat_s_let_u_upsilon",
					"<^>!>+", "lat_s_let_u_upsilon::modifier",
					"<^>!<!", "lat_s_let_m_turned",
					"<^>!<!>+", "lat_s_let_m_turned::modifier",
					"<^>!<!<+", "lat_s_let_u__stroke_long",
					"<^>!<!<+>+", "lat_s_let_u__stroke_long::modifier",
					">+", "lat_s_let_u::modifier",
				),
				"V", Map(
					"<^>!", "lat_s_let_v_turned",
					"<^>!>+", "lat_s_let_v_turned::modifier",
					">+", "lat_s_let_v::modifier",
				),
				"W", Map(
					">+", "lat_s_let_w::modifier",
				),
				"X", Map(
					">+", "lat_s_let_x::modifier",
				),
				"Y", Map(
					"<^>!", "lat_c_let_y::smallCapital",
					">+", "lat_s_let_y::modifier",
				),
				"Z", Map(
					"<^>!", "lat_s_let_z_ezh",
					">+", "lat_s_let_z::modifier",
				),
				"Semicolon", Map(
					"<^>!", "colon_triangle_half",
				),
				"Apostrophe", Map(
					"<^>!", "line_vertical_below::modifier",
					">+", "apostrophe::modifier",
				),
				"Comma", Map(
					">+", "comma_above_turned::modifier",
				),
			)
		),
		"Deseret", Map(
			"ForceSingle", True,
			"Flat", Map(
				"A", "deseret_[c,s]_let_a_short",
				"B", "deseret_[c,s]_let_b_bee",
				"C", "deseret_[c,s]_let_c_chee",
				"D", "deseret_[c,s]_let_d_dee",
				"E", "deseret_[c,s]_let_e_short",
				"F", "deseret_[c,s]_let_f_ef",
				"G", "deseret_[c,s]_let_g_gay",
				"H", "deseret_[c,s]_let_h",
				"I", "deseret_[c,s]_let_i_short",
				"J", "deseret_[c,s]_let_j_jee",
				"K", "deseret_[c,s]_let_k_kay",
				"L", "deseret_[c,s]_let_l_el",
				"M", "deseret_[c,s]_let_m_em",
				"N", "deseret_[c,s]_let_n_en",
				"O", "deseret_[c,s]_let_o_short",
				"P", "deseret_[c,s]_let_p_pee",
				"Q", "",
				"R", "deseret_[c,s]_let_r_er",
				"S", "deseret_[c,s]_let_s_es",
				"T", "deseret_[c,s]_let_t_tee",
				"U", "deseret_[c,s]_let_u_oo_short",
				"V", "deseret_[c,s]_let_v_vee",
				"W", "deseret_[c,s]_let_w_wu",
				"X", "",
				"Y", "deseret_[c,s]_let_y_yee",
				"Z", "deseret_[c,s]_let_z_zee",
			),
			"Moded", Map(
				"A", Map(
					"<+", "deseret_[c,s]_let_a_long",
					"<!", "deseret_[c,s]_let_a_ow",
					"<^>!", "deseret_[c,s]_let_a_ah_short",
					"<^>!<!", "deseret_[c,s]_let_a_ah_long",
				),
				"D", Map(
					"<!", "deseret_[c,s]_let_d_thee",
				),
				"E", Map(
					"<+", "deseret_[c,s]_let_e_long",
				),
				"I", Map(
					"<!", "deseret_[c,s]_let_i_ay",
					"<^>!", "deseret_[c,s]_let_i_long",
				),
				"N", Map(
					"<^>!", "deseret_[c,s]_let_n_eng",
				),
				"O", Map(
					">+", "deseret_[c,s]_let_o_long",
					"<^>!", "deseret_[c,s]_let_o_oi",
				),
				"U", Map(
					"<^>!", "deseret_[c,s]_let_u_oo_long",
					"<!", "deseret_[c,s]_let_г_ew",
				),
				"S", Map(
					"<!", "deseret_[c,s]_let_s_esh",
				),
				"T", Map(
					"<^>!", "deseret_[c,s]_let_t_eth",
				),
				"Z", Map(
					"<!", "deseret_[c,s]_let_z_zhee",
				),
			)
		),
		"Shavian", Map(
			"ForceSingle", True,
			"Flat", Map(
				"A", "shavian_n_let_a_ash",
				"B", "shavian_n_let_b_bib",
				"C", "shavian_n_let_c_church",
				"D", "shavian_n_let_d_dead",
				"E", "shavian_n_let_e_egg",
				"F", "shavian_n_let_f_fee",
				"G", "shavian_n_let_g_gag",
				"H", "shavian_n_let_h_ha_ha",
				"I", "shavian_n_let_i_if",
				"J", "shavian_n_let_j_judge",
				"K", "shavian_n_let_k_kick",
				"L", "shavian_n_let_l_loll",
				"M", "shavian_n_let_m_mime",
				"N", "shavian_n_let_n_nun",
				"O", "shavian_n_let_o_on",
				"P", "shavian_n_let_p_peep",
				"Q", "",
				"R", "shavian_n_let_r_roar",
				"S", "shavian_n_let_s_so",
				"T", "shavian_n_let_t_tot",
				"U", "shavian_n_let_u_wool",
				"V", "shavian_n_let_v_vow",
				"W", "shavian_n_let_y_yea",
				"X", "",
				"Y", "shavian_n_let_w_woe",
				"Z", "shavian_n_let_z_zoo",
			),
			"Moded", Map(
				"A", Map(
					"<+", "shavian_n_let_a_up",
					"<!", "shavian_n_let_a_ice",
					"<^>!", "shavian_n_let_a_ado",
					"<^>!>+", "shavian_n_let_a_ah",
					"<^>!<!", "shavian_n_lig_are",
				),
				"D", Map(
					"<!", "shavian_n_let_d_they",
				),
				"E", Map(
					"<!", "shavian_n_let_e_age",
					"<^>!<!", "shavian_n_lig_air",
					"<^>!<!<+", "shavian_n_lig_err",
				),
				"I", Map(
					"<^>!", "shavian_n_let_i_eat",
					"<^>!<!", "shavian_n_lig_ian",
				),
				"J", Map(
					"<^>!<!", "shavian_n_lig_yew",
				),
				"N", Map(
					"<^>!", "shavian_n_let_n_hung",
				),
				"O", Map(
					"<^>!", "shavian_n_let_o_oak",
					"<^>!>+", "shavian_n_let_o_awe",
					"<^>!<!", "shavian_n_lig_or",
				),
				"R", Map(
					"<^>!<!", "shavian_n_lig_array",
					"<^>!<!<+", "shavian_n_lig_ear",
				),
				"S", Map(
					"<!", "shavian_n_let_s_sure",
				),
				"T", Map(
					"<^>!", "shavian_n_let_t_thigh",
				),
				"U", Map(
					"<^>!", "shavian_n_let_u_ooze",
				),
				"Z", Map(
					"<!", "shavian_n_let_z_measure",
				),
			)
		),
		"Math", Map(
			"ForceSingle", True,
			"Flat", Map(
				"D", "delta",
				"I", ["contour_integral", "integral"],
				"N", "nabla",
				"L", "",
				"P", "n_ary_product",
				"R", "square_root",
				"S", "n_ary_summation",
				"U", "n_ary_union",
			),
			"Moded", Map(
				"P", Map(),
				"Space", Map(
					"<!", "medium_math_space",
				),
				"Comma", Map(
					">+", "less_or_equals",
				),
				"Dot", Map(
					">+", "greater_or_equals",
				),
			)
		),
	),
	"Important", Map(
		"Flat", Map(
			"RAlt", (*) => ChrCrafter.ComposeActivate(),
		),
		"Moded", Map(
			; Functional
			"F1", Map(
				"<^>!", (*) => KeyboardBinder.ToggleDefaultMode(),
				"<^>!>+", (*) => Auxiliary.ToggleInputMode(),
				"<^>!<!", (*) => KeyboardBinder.ToggleDefaultMode("Second Keys"),
			),
			"F2", Map(
				"<^>!<!", (*) => KeyboardBinder.ToggleDefaultMode("Tertiary Keys"),
				"<^>!", (*) => InputScriptProcessor(),
				"<^>!>+", (*) => InputScriptProcessor("pinYin"),
				"<^>!<+", (*) => InputScriptProcessor("karaShiki"),
			),
			"F3", Map(),
			"F6", Map(),
			"F7", Map(),
			"F12", Map(),
			"Up", Map(
				"<#<!", (*) => KeyboardBinder.ToggleNumStyle("Superscript"),
				"<#<!>+", (*) => KeyboardBinder.ToggleNumStyle("Roman"),
			),
			"Down", Map(
				"<#<!", (*) => KeyboardBinder.ToggleNumStyle("Subscript"),
			),
			"PgUp", Map("<#<!", (*) => UnicodeWebResource()),
			"Home", Map("<#<!", (*) => Panel.Panel()),
			"A", Map("<#<!", (*) => Scripter.SelectorPanel("Glyph Variations")),
			"S", Map("<#<!", (*) => Scripter.SelectorPanel()),
			"F", Map("<#<!", (*) => ChrLib.SearchPrompt().send()),
			"H", Map(
				">^", (*) => Util.StrSelToHTML("Entities"),
				">^>+", (*) => Util.StrSelToHTML(),
			),
			"J", Map(
				">^", (*) => Util.StrSelToHTML("Entities", True),
			),
			"Comma", Map("<#<!", (*) => GetKeyScanCode()),
			"Q", Map(
				"<!", (*) => BindHandler.LangCall(Map(
					"en-US", TextHandlers.ToQuote.Bind(TextHandlers,
						[ChrLib.Get("quote_left_double"), ChrLib.Get("quote_right_double")],
						[ChrLib.Get("quote_left"), ChrLib.Get("quote_right")]
					),
					"ru-RU", TextHandlers.ToQuote.Bind(TextHandlers,
						[ChrLib.Get("quote_angle_left_double"), ChrLib.Get("quote_angle_right_double")],
						[ChrLib.Get("quote_left_double_ghost_ru"), ChrLib.Get("quote_right_double_ghost_ru")]
					)
				)),
			),
			"Y", Map(
				">^", (*) => Util.StrSelToUnicode("CSS"),
			),
			"U", Map(
				">^", (*) => Util.StrSelToUnicode(),
			),
			"I", Map(
				">^", (*) => Util.StrSelToUnicode("Hex"),
			),
		)
	),
	"Keyboard Default", Map(
		"Flat", Map(
			; Digits
			"0", "digit_0",
			"1", "digit_1",
			"2", "digit_2",
			"3", "digit_3",
			"4", "digit_4",
			"5", "digit_5",
			"6", "digit_6",
			"7", "digit_7",
			"8", "digit_8",
			"9", "digit_9",
			"Equals", ["equals"],
			"HyphenMinus", ["hyphen_minus"],
			"Dot", ["dot"],
			"Comma", ["comma"],
			"Slash", ["solidus"],
			"Backslash", ["reverse_solidus"],
			"Semicolon", ["semicolon"],
			"Apostrophe", ["apostrophe"],
			"LeftBracket", ["left_bracket"],
			"RightBracket", ["right_bracket"],
			"Tilde", ["grave_accent"],
			"Равно", ["equals"],
			"ДефисоМинус", ["hyphen_minus"],
			"Точка", ["dot"],
			"ОбратныйСлэш", ["reverse_solidus"],
			; Latin alphabet (A-Z)
			"A", ["lat_[c,s]_let_a"],
			"B", ["lat_[c,s]_let_b"],
			"C", ["lat_[c,s]_let_c"],
			"D", ["lat_[c,s]_let_d"],
			"E", ["lat_[c,s]_let_e"],
			"F", ["lat_[c,s]_let_f"],
			"G", ["lat_[c,s]_let_g"],
			"H", ["lat_[c,s]_let_h"],
			"I", ["lat_[c,s]_let_i"],
			"J", ["lat_[c,s]_let_j"],
			"K", ["lat_[c,s]_let_k"],
			"L", ["lat_[c,s]_let_l"],
			"M", ["lat_[c,s]_let_m"],
			"N", ["lat_[c,s]_let_n"],
			"O", ["lat_[c,s]_let_o"],
			"P", ["lat_[c,s]_let_p"],
			"Q", ["lat_[c,s]_let_q"],
			"R", ["lat_[c,s]_let_r"],
			"S", ["lat_[c,s]_let_s"],
			"T", ["lat_[c,s]_let_t"],
			"U", ["lat_[c,s]_let_u"],
			"V", ["lat_[c,s]_let_v"],
			"W", ["lat_[c,s]_let_w"],
			"X", ["lat_[c,s]_let_x"],
			"Y", ["lat_[c,s]_let_y"],
			"Z", ["lat_[c,s]_let_z"],
			; Cyrillic alphabet (А-Я)
			"А", ["cyr_[c,s]_let_a"],
			"Б", ["cyr_[c,s]_let_b"],
			"В", ["cyr_[c,s]_let_v"],
			"Г", ["cyr_[c,s]_let_g"],
			"Д", ["cyr_[c,s]_let_d"],
			"Е", ["cyr_[c,s]_let_ye"],
			"Ё", ["cyr_[c,s]_let_ye__diaeresis"],
			"Ж", ["cyr_[c,s]_let_zh"],
			"З", ["cyr_[c,s]_let_z"],
			"И", ["cyr_[c,s]_let_i"],
			"Й", ["cyr_[c,s]_let_i__breve"],
			"К", ["cyr_[c,s]_let_k"],
			"Л", ["cyr_[c,s]_let_l"],
			"М", ["cyr_[c,s]_let_m"],
			"Н", ["cyr_[c,s]_let_n"],
			"О", ["cyr_[c,s]_let_o"],
			"П", ["cyr_[c,s]_let_p"],
			"Р", ["cyr_[c,s]_let_r"],
			"С", ["cyr_[c,s]_let_s"],
			"Т", ["cyr_[c,s]_let_t"],
			"У", ["cyr_[c,s]_let_u"],
			"Ф", ["cyr_[c,s]_let_f"],
			"Х", ["cyr_[c,s]_let_h"],
			"Ц", ["cyr_[c,s]_let_ts"],
			"Ч", ["cyr_[c,s]_let_ch"],
			"Ш", ["cyr_[c,s]_let_sh"],
			"Щ", ["cyr_[c,s]_let_shch"],
			"Ъ", ["cyr_[c,s]_let_yer"],
			"Ы", ["cyr_[c,s]_let_yery"],
			"Ь", ["cyr_[c,s]_let_yeri"],
			"Э", ["cyr_[c,s]_let_e"],
			"Ю", ["cyr_[c,s]_let_yu"],
			"Я", ["cyr_[c,s]_let_ya"],
			"І", ["cyr_[c,s]_let_i_decimal"],
			"Ѣ", ["cyr_[c,s]_let_yat"]
		),
		"Moded", Map(
			; Digits
			"1", Map("+", "exclamation"),
			"2", Map("+:LangFlat", ["commercial_at", "quote"]),
			"3", Map("+:LangFlat", ["number_sign", "numero_sign"]),
			"4", Map("+:LangFlat", ["wallet_dollar", "semicolon"]),
			"5", Map("+", "percent"),
			"6", Map("+:LangFlat", ["circumflex_accent", "colon"]),
			"7", Map("+:LangFlat", ["lat_s_lig_et", "question"]),
			"8", Map("+", "asterisk"),
			"9", Map("+", "left_parenthesis"),
			"0", Map("+", "right_parenthesis"),
			"Equals", Map("+", ["plus"]),
			"HyphenMinus", Map("+", ["underscore"]),
			"Slash", Map("+", ["question"]),
			"Backslash", Map("+", ["vertical_line"]),
			"Semicolon", Map("+", ["colon"]),
			"Apostrophe", Map("+", ["quote"]),
			"Tilde", Map("+", ["tilde"]),
			"LeftBracket", Map("+", ["left_brace"]),
			"RightBracket", Map("+", ["right_brace"]),
			"Равно", Map("+", ["plus"]),
			"ДефисоМинус", Map("+", ["underscore"]),
			"Точка", Map("+", ["comma"]),
			"ОбратныйСлэш", Map("+", ["solidus"]),
		)
	),
	"Roman Digits", Map(
		"Flat", Map(
			; Digits
			"1:Caps", ["lat_[c,s]_num_1"],
			"2:Caps", ["lat_[c,s]_num_2"],
			"3:Caps", ["lat_[c,s]_num_3"],
			"4:Caps", ["lat_[c,s]_num_4"],
			"5:Caps", ["lat_[c,s]_num_5"],
			"6:Caps", ["lat_[c,s]_num_6"],
			"7:Caps", ["lat_[c,s]_num_7"],
			"8:Caps", ["lat_[c,s]_num_8"],
			"9:Caps", ["lat_[c,s]_num_9"],
			"0:Caps", ["lat_[c,s]_num_10"],
		),
		"Moded", Map(
			; Digits
			"1", Map("<+:Caps", ["lat_[c,s]_num_11"]),
			"2", Map("<+:Caps", ["lat_[c,s]_num_12"]),
			"5", Map(
				"<+:Caps", ["lat_[c,s]_num_50"],
				">+:Caps", ["lat_[c,s]_num_500"],
				"<^>!", "lat_c_num_5000",
				"<^>!>+", "lat_c_num_50000",
				"<^>!<!", "lat_c_num_50_early",
			),
			"6", Map("<^>!<!", "lat_c_num_6_late"),
			"0", Map(
				">+:Caps", ["lat_[c,s]_num_100"],
				"<^>!:Caps", ["lat_[c,s]_num_1000"],
				"<^>!>+", "lat_c_num_10000",
				"<^>!<+", "lat_c_num_100000",
			),
		),
	),
	"Subscript Digits", Map(
		"Flat", Map(
			; Digits
			"0:Caps", ["digit_0::[superscript,subscript]"],
			"1:Caps", ["digit_1::[superscript,subscript]"],
			"2:Caps", ["digit_2::[superscript,subscript]"],
			"3:Caps", ["digit_3::[superscript,subscript]"],
			"4:Caps", ["digit_4::[superscript,subscript]"],
			"5:Caps", ["digit_5::[superscript,subscript]"],
			"6:Caps", ["digit_6::[superscript,subscript]"],
			"7:Caps", ["digit_7::[superscript,subscript]"],
			"8:Caps", ["digit_8::[superscript,subscript]"],
			"9:Caps", ["digit_9::[superscript,subscript]"],
			"Equals:Caps", ["equals::[superscript,subscript]"],
			"HyphenMinus:Caps", ["minus::[superscript,subscript]"],
		),
		"Moded", Map(
			; Digits
			"9", Map("+:Caps", ["left_parenthesis::[superscript,subscript]"]),
			"0", Map("+:Caps", ["right_parenthesis::[superscript,subscript]"]),
			"Equals", Map("+:Caps", ["plus::[superscript,subscript]"]),
		)
	),
	"Superscript Digits", Map(
		"Flat", Map(
			; Digits
			"0:Caps", ["digit_0::[subscript,superscript]"],
			"1:Caps", ["digit_1::[subscript,superscript]"],
			"2:Caps", ["digit_2::[subscript,superscript]"],
			"3:Caps", ["digit_3::[subscript,superscript]"],
			"4:Caps", ["digit_4::[subscript,superscript]"],
			"5:Caps", ["digit_5::[subscript,superscript]"],
			"6:Caps", ["digit_6::[subscript,superscript]"],
			"7:Caps", ["digit_7::[subscript,superscript]"],
			"8:Caps", ["digit_8::[subscript,superscript]"],
			"9:Caps", ["digit_9::[subscript,superscript]"],
			"Equals:Caps", ["equals::[subscript,superscript]"],
			"HyphenMinus:Caps", ["minus::[subscript,superscript]"],
		),
		"Moded", Map(
			; Digits
			"9", Map("+:Caps", ["left_parenthesis::[subscript,superscript]"]),
			"0", Map("+:Caps", ["right_parenthesis::[subscript,superscript]"]),
			"Equals", Map("+:Caps", ["plus::[subscript,superscript]"]),
		)
	),
	"Diacritic", Map(
		"Flat", Map(),
		"Moded", Map(
			"A", Map(
				"<^<!", "acute",
				"<^<!<+", "acute_double",
				"<^<!>+", "acute_below"
			),
			"B", Map(
				"<^<!", "breve",
				"<^<!<+", "breve_inverted",
				"<^<!>+", "breve_below",
				"<^<!<+>+", "breve_inverted_below",
			),
			"C", Map(
				"<^<!", "circumflex",
				"<^<!<+", "caron",
				"<^<!>+", "cedilla",
				"<^<!<+>+", "circumflex_below"
			),
			"D", Map(
				"<^<!", "dot_above",
				"<^<!<+", "diaeresis",
				"<^<!>+", "dot_below",
				"<^<!<+>+", "diaeresis_below"
			),
			"F", Map(
				"<^<!", "fermata"
			),
			"G", Map(
				"<^<!", "grave",
				"<^<!<+", "grave_double",
				"<^<!>+", "cyr_com_dasia_pneumata",
				"<^<!<+>+", "cyr_com_psili_pneumata"
			),
			"H", Map(
				"<^<!", "hook_above",
				"<^<!<+", "horn",
				"<^<!>+", "palatal_hook",
				"<^<!<+>+", "retroflex_hook"
			),
			"M", Map(
				"<^<!", "macron",
				"<^<!<+", "macron_below"
			),
			"N", Map(
				"<^<!", "cyr_com_titlo"
			),
			"O", Map(
				"<^<!", "ogonek",
				"<^<!<+", "ogonek_above"
			),
			"R", Map(
				"<^<!", "ring_above",
				"<^<!<+", "ring_below"
			),
			"S", Map(
				"<^<!", "stroke_short",
				"<^<!<+", "stroke_long"
			),
			"T", Map(
				"<^<!", "tilde_above",
				"<^<!<+", "tilde_overlay",
				"<^<!<+>+", "tilde_below"
			),
			"V", Map(
				"<^<!", "line_vertical",
				"<^<!<+", "line_vertical_double"
			),
			"X", Map(
				"<^<!", "x_above",
				"<^<!<+", "x_below"
			),
			"Z", Map(
				"<^<!", "zigzag_above"
			),
			"Slash", Map(
				"<^<!", "solidus_short",
				"<^<!<+", "solidus_long"
			),
			"Comma", Map(
				"<^<!", "comma_above",
				"<^<!<+", "comma_below"
			),
			"Dot", Map(
				"<^<!", "dot_above",
				"<^<!<+", "diaeresis"
			)
		)
	),
	"Common", Map(
		"Flat", Map(
			"NumpadAdd", (K) => BindHandler.TimeSend(K, Map(
				"NumpadSub", (*) => BindHandler.Send(K, "minusplus"),
			)),
			"NumpadSub", (K) => BindHandler.TimeSend(K, Map(
				"NumpadAdd", (*) => BindHandler.Send(K, "plusminus"),
			), (*) => BindHandler.Send(K, "minus")),
			"NumpadMult", (K) => BindHandler.TimeSend(K, Map(
				"NumpadDiv", (*) => BindHandler.Send(K, "division_times"),
			), (*) => BindHandler.Send(K, "multiplication")),
			"NumpadDiv", (K) => BindHandler.TimeSend(K, Map(),
				(*) => BindHandler.Send(K, "division")),
		),
		"Moded", Map(
			; Numpad
			"Numpad0", Map(
				"<^<!", "dotted_circle",
				"<^>!", "empty_set",
			),
			"NumpadMult", Map(
				"<^>!", "asterisk_two",
				"<^>!>+", "asterism",
				"<^>!<+", "asterisk_low",
			),
			"NumpadDiv", Map(
				"<^>!", "dagger",
				"<^>!>+", "dagger_double",
				"<^>!<!", "dagger_tripple",
				"<^<!", "asterisk_operator",
				"<^<!<+", "bullet_operator",
			),
			; Arrows
			"Left", Map(
				"<^>!", (K) => BindHandler.TimeSend(K, Map(
					"Up", (*) => BindHandler.Send(K, "arrow_leftup"),
					"Down", (*) => BindHandler.Send(K, "arrow_leftdown"),
					"Right", (*) => BindHandler.Send(K, "arrow_leftright"),
				), (*) => BindHandler.Send(K, "arrow_left")),
				"<^>!<+", "arrow_left_ushaped",
				"<^>!>+", "arrow_left_circle",
			),
			"Right", Map(
				"<^>!", (K) => BindHandler.TimeSend(K, Map(
					"Up", (*) => BindHandler.Send(K, "arrow_rightup"),
					"Down", (*) => BindHandler.Send(K, "arrow_rightdown"),
					"Left", (*) => BindHandler.Send(K, "arrow_leftright"),
				), (*) => BindHandler.Send(K, "arrow_right")),
				"<^>!<+", "arrow_right_ushaped",
				"<^>!>+", "arrow_right_circle",
			),
			"Up", Map(
				"<^>!", (K) => BindHandler.TimeSend(K, Map(
					"Left", (*) => BindHandler.Send(K, "arrow_leftup"),
					"Down", (*) => BindHandler.Send(K, "arrow_updown"),
					"Right", (*) => BindHandler.Send(K, "arrow_rightup"),
				), (*) => BindHandler.Send(K, "arrow_up")),
				"<^>!<+", "arrow_up_ushaped",
			),
			"Down", Map(
				"<^>!", (K) => BindHandler.TimeSend(K, Map(
					"Left", (*) => BindHandler.Send(K, "arrow_leftdown"),
					"Up", (*) => BindHandler.Send(K, "arrow_updown"),
					"Right", (*) => BindHandler.Send(K, "arrow_rightdown"),
				), (*) => BindHandler.Send(K, "arrow_down")),
				"<^>!<+", "arrow_down_ushaped",
			),
			; Digit & Misc Layout
			"1", Map(
				"<!", "section",
				"<^>!", "inverted_exclamation",
				"<^>!<+", "double_exclamation_question",
				"<^>!>+", "double_exclamation",
				">+:Caps", "interrobang[_inverted,]",
			),
			"2", Map(
				"<^>!:Caps", ["registered", "copyright"],
				"<^>!<+:Caps", ["servicemark", "trademark"],
				"<^>!>+", "sound_recording_copyright"
			),
			"3", Map(
				"<^>!:Caps", ["prime_single[_reversed,]"],
				"<^>!>+:Caps", ["prime_double[_reversed,]"],
				"<^>!<+:Caps", ["prime_triple[_reversed,]"],
				"<^>!<+>+", "prime_quadruple"
			),
			"4", Map("<^>!", "division"),
			"5", Map("<^>!", "permille", "<^>!<+", "pertenthousand"),
			"6", Map(),
			"7", Map(
				"<^>!", "inverted_question",
				"<^>!>+", "double_question",
				"<^>!<+", "double_question_exclamation",
				"<^>!<!", "reversed_question"
			),
			"8", Map(
				"<^>!", "multiplication",
				"<^>!<!", "infinity"
			),
			"9", Map(
				"<^>!", "left_chevron",
				"<!", "left_bracket",
				"<!<+", "left_brace"
			),
			"0", Map(
				"<^>!", "right_chevron",
				"<!", "right_bracket",
				"<!<+", "right_brace"
			),
			"Equals", Map(
				"<^>!", ["noequals"],
				"<^>!<!", ["almostequals"],
				"<^>!<+", ["plusminus"]
			),
			"HyphenMinus", Map(
				"<^>!>+", ["hyphenation_point"],
				"<^<!", ["softhyphen"],
				"<^<!<+", ["minus"],
				"<^>!", ["emdash"],
				"<^>!<+", ["endash"],
				"<!:Caps", ["two_emdash", "three_emdash"],
				"<^>!<!", ["hyphen"],
				"<^>!<!<+", ["no_break_hyphen"],
				"<^>!<!>+", ["figure_dash"]
			),
			"LeftBracket", Map(
				"<^>!<!", ["left_cjk_tortoise_shell"],
				"<^>!<!<+", ["left_cjk_corner_bracket"],
				"<^>!<!>+", ["left_cjk_title_bracket"],
				"<^>!<!<+>+", ["left_double_cjk_title_bracket"],
				"<^>!", ["left_bracket_with_quill"],
				"<^>!>+", ["left_white_bracket"],
				"<^>!<+", ["left_white_tortoise_shell"],
			),
			"RightBracket", Map(
				"<^>!<!", ["right_cjk_tortoise_shell"],
				"<^>!<!<+", ["right_cjk_corner_bracket"],
				"<^>!<!>+", ["right_cjk_title_bracket"],
				"<^>!<!<+>+", ["right_double_cjk_title_bracket"],
				"<^>!", ["right_bracket_with_quill"],
				"<^>!>+", ["right_white_bracket"],
				"<^>!<+", ["right_white_tortoise_shell"],
			),
			"Slash", Map(
				"<^>!", "ellipsis",
				"<^>!<+", "tricolon",
				"<^>!<+>+", "quartocolon",
				"<!", "two_dot_punctuation",
				"<^>!>+", "fraction_slash"
			),
			"Backslash", Map(
				"<^>!", "grapheme_joiner",
			),
			"Comma", Map(
				"<^>!", ["quote_left_double"],
				"<^>!<+", ["quote_left"],
				"<^>!>+", ["quote_low_9_double"],
				"<^>!<+>+", ["quote_low_9"],
				"<^>!<!", ["quote_angle_left_double"],
				"<^>!<!<+", ["quote_angle_left"]
			),
			"Dot", Map(
				"<^>!", ["quote_right_double"],
				"<^>!<+", ["quote_right"],
				"<^>!>+", ["quote_low_9_double_reversed"],
				"<^>!<!", ["quote_angle_right_double"],
				"<^>!<!<+", ["quote_angle_right"]
			),
			"Tilde", Map(
				"<^>!", "bullet",
				"<^>!<!", "bullet_hyphen",
				"<^>!<+", "interpunct",
				"<^>!>+", "quote_right",
				"<^>!<!<+", "bullet_triangle",
				"<^>!<!>+", "bullet_white",
				">+", "tilde_reversed"
			),
			"Apostrophe", Map(),
			"Space", Map(
				"<^>!", "no_break_space",
				"<^>!>+", "emsp",
				"<^>!<+", "ensp",
				"<^>!<+>+", "figure_space",
				"<^>!<!", "thinspace",
				"<^>!<!<+", "hairspace",
				"<^>!<!>+", "punctuation_space",
				;"<^>!<!<+>+", "zero_width_space",
				"<!", "emsp13",
				"<^>!>^", "zero_width_space",
				"<^<!", "zero_width_no_break_space",
				;"<+", "emsp14",
				">+", "emsp16",
				"<+>+", "narrow_no_break_space",
			),
			"Tab", Map(
				"<^>!", "zero_width_joiner",
				"<^>!>+", "zero_width_non_joiner",
				"<^>!<+", "word_joiner"
			),
			"ДефисоМинус", Map(
				"<^>!>+", ["hyphenation_point"],
				"<^<!", ["softhyphen"],
				"<^<!<+", ["minus"],
				"<^>!", ["emdash"],
				"<^>!<+", ["endash"],
				"<!:Caps", ["two_emdash", "three_emdash"],
				"<^>!<!", ["hyphen"],
				"<^>!<!<+", ["no_break_hyphen"],
				"<^>!<!>+", ["figure_dash"]
			),
			"Равно", Map(
				"<^>!", ["noequals"],
				"<^>!<!", ["almostequals"],
				"<^>!<+", ["plusminus"]
			),
			; Latin-Modifiers Keyboard Layout
			"A", Map(
				"<!", ["lat_[c,s]_let_a__acute"],
				"<^>!", ["lat_[c,s]_let_a__breve"],
				"<^>!<!", ["lat_[c,s]_let_a__circumflex"],
				"<^>!<!<+", ["lat_[c,s]_let_a__ring_above"],
				"<^>!<!>+", ["lat_[c,s]_let_a__ogonek"],
				"<^>!>+", ["lat_[c,s]_let_a__macron"],
				"<^>!<+", ["lat_[c,s]_let_a__diaeresis"],
				"<^>!<+>+", ["lat_[c,s]_let_a__tilde_above"],
				">+", ["lat_[c,s]_let_a__grave"],
				"<+>+", ["lat_[c,s]_let_a__grave_double"]),
			"B", Map(
				"<^>!", ["lat_[c,s]_let_b__dot_above"],
				"<^>!<!", ["lat_[c,s]_let_b__dot_below"],
				"<^>!<!<+", ["lat_[c,s]_let_b__flourish"],
				"<^>!<+", ["lat_[c,s]_let_b__stroke_short"],
				"<^>!>+", ["lat_[c,s]_let_b__common_hook"]),
			"C", Map("<!", ["lat_[c,s]_let_c__acute"],
				"<^>!", ["lat_[c,s]_let_c__dot_above"],
				"<^>!<!", ["lat_[c,s]_let_c__circumflex"],
				"<^>!<!<+", ["lat_[c,s]_let_c__caron"],
				"<^>!<!>+", ["lat_[c,s]_let_c__cedilla"],
				">+", "celsius"),
			"D", Map(
				"<!", "degree",
				"<^>!", ["lat_[c,s]_let_d_eth"],
				"<^>!<!", ["lat_[c,s]_let_d__stroke_short"],
				"<^>!<!<+", ["lat_[c,s]_let_d__caron"],
				"<^>!<!>+", ["lat_[c,s]_let_d__cedilla"],
				"<^>!<+>+", ["lat_[c,s]_let_d__circumflex_below"]),
			"E", Map("<!", ["lat_[c,s]_let_e__acute"],
				"<^>!", ["lat_[c,s]_let_a_schwa"],
				"<^>!<!", ["lat_[c,s]_let_e__circumflex"],
				"<^>!<!<+", ["lat_[c,s]_let_e__caron"],
				"<^>!<!>+", ["lat_[c,s]_let_e__ogonek"],
				"<^>!>+", ["lat_[c,s]_let_e__macron"],
				"<^>!<+", ["lat_[c,s]_let_e__diaeresis"],
				"<^>!<+>+", ["lat_[c,s]_let_e__tilde_above"],
				">+", ["lat_[c,s]_let_e__grave"],
				"<+>+", ["lat_[c,s]_let_e__grave_double"]),
			"F", Map(
				"<^>!", ["lat_[c,s]_let_f__dot_above"],
				">+", "fahrenheit"),
			"G", Map("<!", ["lat_[c,s]_let_g__acute"],
				"<^>!", ["lat_[c,s]_let_g__breve"],
				"<^>!<!", ["lat_[c,s]_let_g__circumflex"],
				"<^>!<!<+", ["lat_[c,s]_let_g__caron"],
				"<^>!<!>+", ["lat_[c,s]_let_g__cedilla"],
				"<^>!<+", ["lat_[c,s]_let_g_insular"],
				"<^>!>+", ["lat_[c,s]_let_g__macron"],
				"<^>!<+>+", ["lat_[c,s]_let_g_gamma"],
				">+", ["lat_[c,s]_let_g__dot_above"]),
			"H", Map(
				"<!", ["lat_[c,s]_let_h_hwair"],
				"<^>!", ["lat_[c,s]_let_h__stroke_short"],
				"<^>!<!", ["lat_[c,s]_let_h__circumflex"],
				"<^>!<!<+", ["lat_[c,s]_let_h__caron"],
				"<^>!<!>+", ["lat_[c,s]_let_h__cedilla"],
				"<^>!<+", ["lat_[c,s]_let_h__diaeresis"]),
			"I", Map("<!", ["lat_[c,s]_let_i__acute"],
				"<^>!", ["lat_[c,s]_let_i__breve"],
				"<^>!<!", ["lat_[c,s]_let_i__circumflex"],
				"<^>!<!<+", ["lat_[c,s]_let_i__caron"],
				"<^>!<!>+", ["lat_[c,s]_let_i__ogonek"],
				"<^>!>+", ["lat_[c,s]_let_i__macron"],
				"<^>!<+", ["lat_[c,s]_let_i__diaeresis"],
				"<^>!<+>+", ["lat_[c,s]_let_i__tilde_above"],
				">+", ["lat_[c,s]_let_i__grave"],
				"<+>+", ["lat_[c,s]_let_i__grave_double"],
				"<^>!<!<+>+", ["lat_[c,s]_let_i__dot_above"]),
			"J", Map(
				"<^>!", ["lat_[c,s]_let_j__stroke_short"],
				"<^>!>+", ["lat_[c,s]_let_j_yogh"],
				"<^>!<!", ["lat_[c,s]_let_j__circumflex"],
				"<^>!<!<+", ["lat_[c,s]_let_j__caron"],
			),
			"K", Map("<!", ["lat_[c,s]_let_k__acute"],
				"<^>!<!", ["lat_[c,s]_let_k__dot_below"],
				"<^>!<!<+", ["lat_[c,s]_let_k__caron"],
				"<^>!<!>+", ["lat_[c,s]_let_k__cedilla"],
				"<^>!<+", ["lat_[c,s]_let_k_cuatrillo"],
				">+", "kelvin"
			),
			"L", Map(
				"<!", ["lat_[c,s]_let_l__acute"],
				"<^>!", ["lat_[c,s]_let_l__solidus_short"],
				"<^>!<!<+", ["lat_[c,s]_let_l__caron"],
				"<^>!<!>+", ["lat_[c,s]_let_l__cedilla"],
				"<^>!<+>+", ["lat_[c,s]_let_l__circumflex_below"]),
			"M", Map("<!", ["lat_[c,s]_let_m__acute"],
				"<^>!", ["lat_[c,s]_let_m__dot_above"],
				"<^>!<!", ["lat_[c,s]_let_m__dot_below"],
				"<^>!>+", ["lat_[c,s]_let_m__common_hook"]),
			"N", Map("<!", ["lat_[c,s]_let_n__acute"],
				"<^>!", ["lat_[c,s]_let_n__tilde_above"],
				"<^>!<!", ["lat_[c,s]_let_n__dot_below"],
				"<^>!<!<+", ["lat_[c,s]_let_n__caron"],
				"<^>!<!>+", ["lat_[c,s]_let_n__cedilla"],
				"<^>!>+", ["lat_[c,s]_let_n__common_hook"],
				"<^>!<+", ["let_[c,s]_let_n__descender"],
				"<^>!<+>+", ["lat_[c,s]_let_n__dot_above"],
				">+", ["lat_[c,s]_let_n__grave"]),
			"O", Map("<!", ["lat_[c,s]_let_o__acute"],
				"<^>!", ["lat_[c,s]_let_o__solidus_long"],
				"<^>!<!", ["lat_[c,s]_let_o__circumflex"],
				"<^>!<!<+", ["lat_[c,s]_let_o__caron"],
				"<^>!<!>+", ["lat_[c,s]_let_o__ogonek"],
				"<^>!>+", ["lat_[c,s]_let_o__macron"],
				"<^>!<+", ["lat_[c,s]_let_o__diaeresis"],
				"<^>!<+>+", ["lat_[c,s]_let_o__tilde_above"],
				">+", ["lat_[c,s]_let_o__grave"],
				"<+>+", ["lat_[c,s]_let_o__grave_double"],
				"<^>!<!<+>+", ["lat_[c,s]_let_o__acute_double"]),
			"P", Map("<!", ["lat_[c,s]_let_p__acute"],
				"<^>!", ["lat_[c,s]_let_p__dot_above"],
				"<^>!<!", ["lat_[c,s]_let_p__squirrel_tail"],
				"<^>!<!<+", ["lat_[c,s]_let_p__flourish"],
				"<^>!<+", ["lat_[c,s]_let_p__stroke_short"],
				"<^>!>+", ["lat_[c,s]_let_p__common_hook"]),
			"Q", Map(
				"<^>!<+", ["lat_[c,s]_let_q_tresillo"],
				"<^>!>+", ["lat_[c,s]_let_q__common_hook"]),
			"R", Map("<!", ["lat_[c,s]_let_r__acute"],
				"<^>!", ["lat_[c,s]_let_r__dot_above"],
				"<^>!<!", ["lat_[c,s]_let_r_dot_below"],
				"<^>!<!<+", ["lat_[c,s]_let_r__caron"],
				"<^>!<!>+", ["lat_[c,s]_let_r__cedilla"],
				"<^>!<+", ["lat_[c,s]_let_yr"],
				"<^>!>+", ["lat_[c,s]_let_r_rotunda"],
				"<+>+", ["lat_[c,s]_let_r__grave_double"]),
			"S", Map("<!", ["lat_[c,s]_let_s__acute"],
				"<^>!", ["lat_[c,s]_let_s__comma_below"],
				"<^>!<!", ["lat_[c,s]_let_s__circumflex"],
				"<^>!<!<+", ["lat_[c,s]_let_s__caron"],
				"<^>!<!>+", ["lat_[c,s]_let_s__cedilla"],
				"<^>!>+", ["lat_s_let_s_long"],
				"<^>!<+>+", ["lat_[c,s]_let_s_sigma"],
				"<^>!<+", ["lat_[c,s]_lig_s_eszett"]),
			"T", Map(
				"<^>!", ["lat_[c,s]_let_t__comma_below"],
				"<^>!<!", ["lat_[c,s]_let_t__dot_below"],
				"<^>!<!<+", ["lat_[c,s]_let_t__caron"],
				"<^>!<!>+", ["lat_[c,s]_let_t__cedilla"],
				"<^>!>+", ["lat_[c,s]_let_t_thorn"],
				"<^>!<+", ["lat_[c,s]_let_t__dot_above"],
				"<^>!<+>+", ["lat_[c,s]_sign_et_tironian"]),
			"U", Map(
				"<!", ["lat_[c,s]_let_u__acute"],
				"<^>!", ["lat_[c,s]_let_u__breve"],
				"<^>!<!", ["lat_[c,s]_let_u__circumflex"],
				"<^>!<!<+", ["lat_[c,s]_let_u__ring_above"],
				"<^>!<!>+", ["lat_[c,s]_let_u__ogonek"],
				"<^>!>+", ["lat_[c,s]_let_u__macron"],
				"<^>!<+", ["lat_[c,s]_let_u__diaeresis"],
				"<^>!<+>+", ["lat_[c,s]_let_u__tilde_above"],
				">+", ["lat_[c,s]_let_u__grave"],
				"<+>+", ["lat_[c,s]_let_u__grave_double"],
				"<^>!<!<+>+", ["lat_[c,s]_let_u__acute_double"]),
			"V", Map(
				"<^>!", ["lat_[c,s]_let_v__solidus_long"],
				"<^>!<!", ["lat_[c,s]_let_v__dot_below"],
				"<^>!<+", ["lat_[c,s]_let_v_middle_welsh"],
				"<^>!>+", ["lat_[c,s]_let_v_vend"],
				"<^>!<+>+", ["lat_[c,s]_let_v__tilde_above"]),
			"W", Map("<!", ["lat_[c,s]_let_w__acute"],
				"<^>!", ["lat_[c,s]_let_w__dot_above"],
				"<^>!<!", ["lat_[c,s]_let_w__circumflex"],
				"<^>!<!<+", ["lat_[c,s]_let_w__dot_below"],
				"<^>!<+", ["lat_[c,s]_let_w__diaeresis"],
				"<^>!>+", ["lat_[c,s]_let_w_wynn"],
				"<^>!<!>+", ["lat_[c,s]_let_w_anglicana"],
				">+", ["lat_[c,s]_let_w__grave"]),
			"X", Map(
				"<^>!", ["lat_[c,s]_let_x__dot_above"],
				"<^>!<+", ["lat_[c,s]_let_x__diaeresis"]),
			"Y", Map("<!", ["lat_[c,s]_let_y__acute"],
				"<^>!", ["lat_[c,s]_let_y__dot_above"],
				"<^>!<!", ["lat_[c,s]_let_y__circumflex"],
				"<^>!<!<+", ["lat_[c,s]_let_y_stroke_short"],
				"<^>!<!>+", ["lat_[c,s]_let_y__loop"],
				"<^>!>+", ["lat_[c,s]_let_y__macron"],
				"<^>!<+", ["lat_[c,s]_let_y__diaeresis"],
				"<^>!<+>+", ["lat_[c,s]_let_y__tilde_above"],
				">+", ["lat_[c,s]_let_y__grave"]),
			"Z", Map("<!", ["lat_[c,s]_let_z__acute"],
				"<^>!", ["lat_[c,s]_let_z__dot_above"],
				"<^>!<!", ["lat_[c,s]_let_z__circumflex"],
				"<^>!<!<+", ["lat_[c,s]_let_z__caron"],
				"<^>!>+", ["lat_[c,s]_let_z_ezh"],
				"<^>!<+", ["lat_[c,s]_let_z__stroke_short"]),
			; Russian-Modifiers Keyboard Layout
			"А", Map(
				"<^>!", ["cyr_[c,s]_let_a__breve"],
				"<^>!<+", ["cyr_[c,s]_let_a__diaeresis"],
			),
			"Б", Map(
				"<^>!", ["quote_angle_left_double"],
				"<^>!<+", ["quote_left_double_ghost_ru"],
				"<^>!>+", ["quote_low_9_double"],
				"<^>!<!", ["quote_left_double"],
				"<^>!<!<+", ["quote_angle_left"],
				"<^>!<+>+", ["quote_low_9"],
			),
			"В", Map(),
			"Г", Map(
				"<!", ["cyr_[c,s]_let_g__acute"],
				"<^>!", ["cyr_[c,s]_let_g_upturn"],
				"<^>!<+", ["cyr_[c,s]_let_g_stroke_short"],
				"<^>!<!", ["cyr_[c,s]_let_g_descender"],
			),
			"Д", Map(),
			"Е", Map(
				"<!", ["cyr_[c,s]_let_e_breve"],
				">+", ["cyr_[c,s]_let_e_grave"],
				"<^>!", ["cyr_[c,s]_let_ye_yat"],
			),
			"Ё", Map(),
			"Ж", Map(
				"<!", ["cyr_[c,s]_let_zhe_breve"],
				"<^>!", ["cyr_[c,s]_let_zh_dzhe"],
				"<^>!<+", ["cyr_[c,s]_let_zhe_diaeresis"],
				"<^>!>+", ["cyr_[c,s]_let_zh_dje"],
				"<^>!<!", ["cyr_[c,s]_let_zhe_descender"],
			),
			"З", Map(
				"<^>!", ["cyr_[c,s]_let_z_dzelo"],
				"<^>!>+", ["cyr_[c,s]_let_z_zemlya"],
				"<^>!<+", ["cyr_[c,s]_let_z_diaeresis"],
				"<^>!<!", ["cyr_[c,s]_let_z_descender"],
			),
			"И", Map(
				"<^>!", ["cyr_[c,s]_let_i_decimal"],
				"<^>!<+", ["cyr_[c,s]_let_i_diaeresis"],
				"<^>!>+", ["cyr_[c,s]_let_i_macron"],
				"<^>!<!", ["cyr_[c,s]_let_i_izhitsa"],
				"<^>!<!<+>+", ["cyr_[c,s]_let_iota"]
			),
			"Й", Map(
				"<^>!", ["cyr_[c,s]_let_i__breve"],
				"<^>!<!", ["cyr_[c,s]_let_j"],
				"<^>!<!>+", ["cyr_[c,s]_let_i_breve_tail"],
			),
			"К", Map(
				"<!", ["cyr_[c,s]_let_k_acute"],
				"<^>!", ["cyr_[c,s]_let_ksi"],
				"<^>!<!", ["cyr_[c,s]_let_k_descender"],
			),
			"Л", Map(
				"<^>!", ["cyr_[c,s]_lig_lje"],
				"<^>!<!", ["cyr_[c,s]_let_l_descender"],
				"<^>!<!>+", ["cyr_[c,s]_let_l_tail"],
				"<^>!<!<+", ["cyr_[c,s]_let_l_palochka"]
			),
			"М", Map(
				"<^>!<!<+>+", ["cyr_[c,s]_let_m_tail"]
			),
			"Н", Map(
				"<^>!", ["cyr_[c,s]_lig_nje"],
				"<^>!<!", ["cyr_[c,s]_let_n_descender"],
				"<^>!<!>+", ["cyr_[c,s]_let_n_tail"],
			),
			"О", Map(
				"<^>!", ["cyr_[c,s]_let_omega"],
				"<^>!<+", ["cyr_[c,s]_let_o_diaeresis"]
			),
			"П", Map(
				"<^>!", ["cyr_[c,s]_let_psi"],
				"<^>!<!", ["cyr_[c,s]_let_p_descender"]
			),
			"Р", Map(),
			"С", Map(
				"<^>!<!", ["cyr_[c,s]_let_s_descender"]
			),
			"Т", Map(
				"<^>!", ["cyr_[c,s]_let_tje"],
				"<^>!<!", ["cyr_[c,s]_let_t_descender"]
			),
			"У", Map(
				"<!", ["cyr_[c,s]_let_u_breve"],
				"<^>!", ["cyr_[c,s]_let_yus_big"],
				"<^>!<+", ["cyr_[c,s]_let_u_diaeresis"],
				"<^>!>+", ["cyr_[c,s]_let_u_macron"],
				"<^>!<!", ["cyr_[c,s]_lig_uk"],
			),
			"Ф", Map(
				"<^>!", ["cyr_[c,s]_let_fita"]
			),
			"Х", Map(
				"<^>!", ["cyr_[c,s]_let_h_shha"],
				"<^>!<!", ["cyr_[c,s]_let_h_descender"],
			),
			"Ц", Map(),
			"Ч", Map(
				"<^>!", ["cyr_[c,s]_let_tshe"],
				"<^>!<+", ["cyr_[c,s]_let_ch_diaeresis"],
				"<^>!<!", ["cyr_[c,s]_let_ch_descender"],
				"<^>!<!<+", ["cyr_[c,s]_let_ch_djerv"],
			),
			"Ш", Map(),
			"Щ", Map(),
			"Ъ", Map(
				"<^>!", ["cyr_[c,s]_let_u_straight"],
				"<^>!>+", ["cyr_[c,s]_let_u_straight_stroke_short"],
			),
			"Ы", Map(
				"<^>!", ["cyr_[c,s]_dig_yeru_with_back_yer"],
				"<^>!<!", ["cyr_[c,s]_let_y_yn"],
				"<^>!<+", ["cyr_[c,s]_let_yery_diaeresis"]
			),
			"Ь", Map(
				"<^>!<!", ["cyr_[c,s]_let_semisoft_sign"]
			),
			"Э", Map(
				"<^>!", ["cyr_[c,s]_let_ye_anchor"],
				"<^>!<+", ["cyr_[c,s]_let_ye_diaeresis"],
				"<^>!>+", ["cyr_[c,s]_let_schwa"],
				"<^>!<+>+", ["cyr_[c,s]_let_schwa_diaeresis"],
			),
			"Ю", Map(
				"<^>!", ["quote_angle_right_double"],
				"<^>!<+", ["quote_right_double_ghost_ru"],
				"<^>!>+", ["quote_low_9_double_reversed"],
				"<^>!<!", ["quote_right_double"],
				"<^>!<!<+", ["quote_angle_right"]
			),
			"Я", Map(
				"<^>!", ["cyr_[c,s]_let_yus_little"],
				"<^>!<+", ["cyr_[c,s]_lig_a_iotified"],
			)
		)
	),
	"Second Keys", Map(
		"Flat", Map(),
		"Moded", Map(
			"Comma", Map(
				"<^<!", "comma_above_turned",
				"<^<!<+", "comma_above_reversed",
				"<^<!>+", "comma_above_right",
			),
			"Space", Map(
				"<^>!>+", "emquad",
				"<^>!<+", "enquad",
				"<!", "emsp14",
			),
			"A", Map(
				"<^<!", "asterisk_above",
				"<^<!<+", "asterisk_below",
			),
			"B", Map(
				"<^<!", "bridge_above",
				"<^<!<+", "bridge_below",
				"<^<!<+>+", "bridge_inverted_below",
			),
			"C", Map(
				"<^<!<+>+", "caron_below",
			),
			"G", Map(
				"<^<!", "grave_below",
			),
			"O", Map(
				"<^<!", "overline",
				"<^<!<+", "overline_double",
				"<^<!>+", "low_line",
				"<^<!<+>+", "low_line_double",
			),
			"R", Map(
				"<^<!", "ring_below_double",
			),
			"T", Map(
				"<^<!", "tilde_not",
				"<^<!<+", "tilde_vertical",
			),
			"V", Map(
				"<^<!", "line_vertical_below",
				"<^<!<+", "line_vertical_double_below",
			),
		),
	),
	"Tertiary Keys", Map(
		"Flat", Map(),
		"Moded", Map(
			"C", Map(
				"<^<!", "candrabindu",
			),
		),
	),
)